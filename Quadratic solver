#include <stdio.h>
#include <math.h>

void instruct();
int get_Coefficients(int *);
int calculateDiscriminant(int a, int b, int c);
float calculateRoots(int a, int b, int c, int discriminant);

int main()
{
    int coefficients[3];
    int discriminant;

    instruct();

    get_Coefficients(coefficients);
    for (int j = 0; j < 3; j++) {
        if(j == 0)
            printf("a = %d \n", coefficients[j]);
        else if(j == 1)
             printf("b = %d \n", coefficients[j]);
        else
             printf("c = %d \n", coefficients[j]);

    }

    discriminant = calculateDiscriminant(coefficients[0], coefficients[1], coefficients[2]);
    calculateRoots(coefficients[0], coefficients[1], coefficients[2], discriminant);


    return 0;
}

int get_Coefficients(int *coefficients){
        for(int i=1; i<=3; i++){
   printf("Enter coefficient %d : ", i);
        scanf("%d", &coefficients[i-1]);

    }
    printf("\n");
    return 0;
}

int calculateDiscriminant(int a, int b, int c){
    int discriminant;
    discriminant = pow(b,2) - 4* a* c;
    printf("\n");
    printf("Discriminant : %d\n", discriminant);
    return discriminant;

}

float calculateRoots(int a, int b, int c, int discriminant){
    float roots[2];

    roots[0] = (-b + sqrt(discriminant)) / 2*a;
    roots[1] = (-b - sqrt(discriminant)) / 2*a;

    printf("\n");
    printf("Root 1 = %.3f\n", roots[0]);
    printf("Root 2 = %.3f\n", roots[1]);

    return 0;
}

void instruct(){
    printf("\n");
    printf("Quadratic equation solver :)\n");
    printf("ax^2 + bx + c\n");
    printf("\n\n");
}
